How to use:

0 Install the dependency. Skip the installation if you have done.
install anaconda
conda create -n NeuronMotif python=3.6
conda  activate NeuronMotif
pip install h5py==2.10.0
pip install matplotlib
pip install pandas
pip install numpy
pip install tensorflow==1.15.0
pip install keras==2.3.1

1 Copy this folder to a new directory ND and 'cd ND'. For exmaple:

cp -r . ~/nm
cd ~/nm

2 Copy your DCNN model  weight file to ND/weight.hdf5. For example:

cp xxx/xxx/weight.deep.h5 ~/nm/weight.hdf5

3 Modify ND/modeldef.py in ND according to the corresponding DCNN model of ND/weight.hdf5

4 Run NeuronMotif algorithm layer by layer with script 'run.layer.sh'. 

The parameter of run.layer.sh:
1st, layer number, start from 1
2nd, kernels number in this layer
3rd, the max threads number to be used. 
It depends on total CPU cores in this computer and is limited by memory size.
Be carefule to set large threads. The memory is easy to be stuffed.

For example:

# 28 cores server 128GB memory

# Note: only the last layer is done, the next layer can be started.
sh run.layer.sh 1 320 20  
sh run.layer.sh 2 480 5
sh run.layer.sh 3 960 5

5 convert to motif file

# parameter is the layer number
python tochen.py 1
python tochen.py 2
python tochen.py 3

# for model generated from  DeepSEA data

python tochenDeepSEA.py 1
python tochenDeepSEA.py 2
python tochenDeepSEA.py 3

the file is xxx.chen in corresponding layer folder


6 install visualization dependences

download and install meme-suit to get tomtom first:

version: 5.1.0, later version does not support >100bp receptive field.

https://meme-suite.org/meme/meme-software/5.1.0/meme-5.1.0.tar.gz
https://meme-suite.org/meme/tools/tomtom

and add it to PATH environment variable

export PATH=/path/to/meme/bin:/path/to/meme:/path/to/meme/libexec/meme-x.x.0:$PATH

7 Download motif database

Take JASPAR as an example:

wget http://jaspar.genereg.net/download/CORE/JASPAR2020_CORE_vertebrates_redundant_pfms_meme.txt
mv JASPAR2020_CORE_vertebrates_redundant_pfms_meme.txt  motifDB.txt

8 Visualization through run visualization script 'vis.layer.sh'.

The parameter of run.layer.sh:
1st, layer number, start from 1
2nd, the max threads number to be used.
It depends on total CPU cores in this computer and is limited by memory size.
Be carefule to set large threads. The memory is easy to be stuffed.

For example:

# 28 cores server 128GB memory

sh vis.layer.sh 1  28
sh vis.layer.sh 2  28
sh vis.layer.sh 3  28

the results of  HTML files in vis folder of corresponding layer folder
